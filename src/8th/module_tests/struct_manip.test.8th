(* 
	struct_manip.test.8th
 
  Test harness for struct_manip.8th
 
 Copyright C 2019 by G3UKB Bob Cowdery
 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 at your option any later version.
 
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
 
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 
  The author can be reached by email at:   
     bob@bobcowdery.plus.com
 *)
 
\ ========================================
\ Debug Settings
\ needs debug/sed
\ true SED-CHECK
\ needs debug/trace
\ dbg:line-info

\ ========================================
\ Includes
"../struct_manip.8th" f:include

\ ========================================
\ Test code
with: fr.sm

4 json-pretty
	
\ Test structures
[
	["val-1", "val-2", "val-3"],
	["outer", ["val-1", "val-2", "val-3"]],
	["outer", "inner", ["val-1", "val-2", "val-3"]]
] var, array

{
	"map-1" : {	
		"key-1" : 	["val-1", "val-2", "val-3"],
		"key-2" : 	["outer", ["val-1", "val-2", "val-3"]],
		"key-3" : 	["outer", "inner", ["val-1", "val-2", "val-3"]],
		"key-4" : 	{"inner-key" : ["val-1", "val-2", "val-3"]},
		"key-5" : 	{"inner-key" : {"inner-key-1" : ["val-1", "val-2", "val-3"]}}
	},
	"map-2" : {	
			"key-1" : 	[0, ["val-1", "val-2", "val-3"]],
			"key-2" : 	[1, "inner", ["val-1", "val-2", "val-3"]],
			"key-3" : 	{"inner-key" : [1,["val-1", "val-2", "val-3"]]},
			"key-4" : 	[2, {"inner-key-1" : ["val-1", "val-2", "val-3"]}]
	}
} var, map

\ =========================================================================
\ Getter examples
: getter_examples
	"Array access" . cr
	array @ [0,1] val@ . cr
	array @ [1,1,1] val@ . cr
	array @ [2,1] val@ . cr
	array @ [2,2,2] val@ . cr

	"Map/Array access" . cr
	map @ ["map-1","key-1",2] val@ . cr
	map @ ["map-1","key-2",1,2] val@ . cr
	map @ ["map-1","key-3",1] val@ . cr
	map @ ["map-1","key-3",2,2] val@ . cr
	map @ ["map-1","key-4","inner-key"] val@ . cr
	map @ ["map-1","key-4","inner-key",1] val@ . cr
	map @ ["map-1","key-5","inner-key","inner-key-1"] val@ . cr
	map @ ["map-1","key-5","inner-key","inner-key-1",1] val@ . cr

	"Indexed Map/Array access" . cr
	map @ ["map-2","key-1",1] ["map-2","key-1",0] idx_val@ . cr
	map @ ["map-2","key-2",2] ["map-2","key-2",0] idx_val@ . cr
	map @ ["map-2","key-3","inner-key",1] ["map-2","key-3","inner-key",0] idx_val@ . cr
	map @ ["map-2","key-4",1,"inner-key-1"] ["map-2","key-4",0] idx_val@ . cr
;

\ =========================================================================
\ Setter examples
: setter_examples
	"Array setters" . cr
	array @ [0] 1 "updated" val!
	array @ [1,1] 1 "updated" val!
	array @ . cr

	"Map/Array setters" . cr
	map @ ["map-1","key-1"] 0 "updated" val!
	map @ ["map-1","key-4"] "inner-key-1" [1,2,3,4] val!
	map @ ["map-1","key-4"] "inner-key" [5,6,7,8] val!
	map @ . cr
;

: run_test
	"Run: " . . cr
	getter_examples
	setter_examples
	0.1 sleep
;

: run_tests
	' run_test 1 1 loop
;

run_tests

"Test complete" log
bye